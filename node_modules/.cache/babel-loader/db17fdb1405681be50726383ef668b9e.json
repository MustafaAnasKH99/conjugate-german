{"ast":null,"code":"var _jsxFileName = \"/home/mustafaa/Desktop/for_trash/GermanAPI/german_conjugator/src/Examples.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Examples = async ({\n  passed_verb\n}) => {\n  const [examples, setExamples] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [hasError, setErrors] = useState(false);\n\n  async function fetchData() {\n    loading ? setLoading(false) : setLoading(true);\n    const res = await fetch('http://localhost:5555/get-example', {\n      method: \"POST\",\n      body: JSON.stringify(something)\n    });\n    res.json().then(res => {\n      // console.log('examples')\n      // console.log(res.sentences_arr)\n      setLoading(false);\n      setExamples(res);\n    }).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData(); // console.log('sentences')\n    // console.log(sentences.sentences_arr.splice(0, 2))\n  }, [sentences]);\n  let something = {\n    verb: passed_verb\n  }; // if (sentences.length > 1){\n  //     alert('yes it is')\n  //     let chunk = sentences.sentences_arr.splice(0, 2)\n  //     console.log('chunk')\n  //     console.log(chunk)\n  // }\n\n  console.log(examples);\n\n  if (loading == true) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, \"Doing something\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        marginTop: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, {\n      /* examples.sentences_arr.forEach((sentence) => {\n      return <p>{sentence}</p>\n      }) */\n    });\n  }\n};\n\nexport default Examples;","map":{"version":3,"sources":["/home/mustafaa/Desktop/for_trash/GermanAPI/german_conjugator/src/Examples.js"],"names":["React","useState","useEffect","Examples","passed_verb","examples","setExamples","loading","setLoading","hasError","setErrors","fetchData","res","fetch","method","body","JSON","stringify","something","json","then","catch","err","sentences","verb","console","log","width","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,QAAQ,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAA2B;AAExC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,SAAX,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEA,iBAAeU,SAAf,GAA0B;AACtBJ,IAAAA,OAAO,GAAGC,UAAU,CAAC,KAAD,CAAb,GAAuBA,UAAU,CAAC,IAAD,CAAxC;AAEA,UAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,SAAf;AAFuD,KAAtC,CAAvB;AAIAN,IAAAA,GAAG,CACFO,IADD,GAECC,IAFD,CAEMR,GAAG,IAAI;AACT;AACA;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,WAAW,CAACM,GAAD,CAAX;AACH,KAPD,EAQCS,KARD,CAQOC,GAAG,IAAIZ,SAAS,CAACY,GAAD,CARvB;AASH;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,SAAS,GADG,CAEZ;AACA;AACH,GAJQ,EAIN,CAACY,SAAD,CAJM,CAAT;AAMA,MAAIL,SAAS,GAAG;AACZM,IAAAA,IAAI,EAAEpB;AADM,GAAhB,CA9BwC,CAoCxC;AACA;AACA;AACA;AACA;AACA;;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ;;AACA,MAAIE,OAAO,IAAI,IAAf,EAAoB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH,GAFD,MAEO;AACH,wBACI;AAAK,MAAA,KAAK,EAAE;AAACoB,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ;AAAC;;;AAAD,KAFR,CADJ;AASH;AACJ,CAxDD;;AA2DA,eAAezB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst Examples = async ({ passed_verb }) => {\n    \n    const [examples, setExamples] = useState({});\n    const [loading, setLoading] = useState(true); \n    const [hasError, setErrors] = useState(false);\n\n    async function fetchData(){\n        loading ? setLoading(false) : setLoading(true)\n\n        const res = await fetch('http://localhost:5555/get-example', {\n        method: \"POST\",\n        body: JSON.stringify(something)\n        });\n        res\n        .json()\n        .then(res => {\n            // console.log('examples')\n            // console.log(res.sentences_arr)\n            setLoading(false)\n            setExamples(res);\n        })\n        .catch(err => setErrors(err));\n    }\n    \n    useEffect(() => {\n        fetchData()\n        // console.log('sentences')\n        // console.log(sentences.sentences_arr.splice(0, 2))\n    }, [sentences]);\n\n    let something = {\n        verb: passed_verb\n    }\n\n    \n\n    // if (sentences.length > 1){\n    //     alert('yes it is')\n    //     let chunk = sentences.sentences_arr.splice(0, 2)\n    //     console.log('chunk')\n    //     console.log(chunk)\n    // }\n    console.log(examples)\n    if (loading == true){\n        return <h1>Doing something</h1>\n    } else {\n        return(\n            <div style={{width: '100%', marginTop: '15px'}}>\n                {\n                    {/* examples.sentences_arr.forEach((sentence) => {\n                    return <p>{sentence}</p>\n                }) */}\n                }\n            </div>\n        )\n    }\n}\n  \n\nexport default Examples\n"]},"metadata":{},"sourceType":"module"}