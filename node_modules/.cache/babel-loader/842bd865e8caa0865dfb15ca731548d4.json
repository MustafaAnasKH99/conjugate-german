{"ast":null,"code":"var _jsxFileName = \"/home/mustafaa/Desktop/for_trash/GermanAPI/german_conjugator/src/Verb.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Verb = ({\n  passed_verb\n}) => {\n  const [hasError, setErrors] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({});\n  const [common_data, setCommonData] = useState({});\n  const [verb, setVerb] = useState(passed_verb);\n  let something = {\n    tense: \"Präsens\",\n    verb\n  };\n\n  async function fetchData() {\n    const res = await fetch('http://localhost:5555/conjugate', {\n      method: \"POST\",\n      body: JSON.stringify(something)\n    });\n    res.json().then(res => {\n      setData(res);\n    }).catch(err => setErrors(err));\n    const resVerbs = await fetch('http://localhost:5555/common-verbs', {\n      method: \"POST\",\n      body: JSON.stringify(something)\n    });\n    resVerbs.json().then(res => {\n      console.log('res');\n      setCommonData(res);\n      setLoading(false);\n    }).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  {\n    console.log(JSON.stringify(data));\n  }\n\n  if (loading === true) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }, \"Loading ...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: data.html\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), JSON.parse(common_data.html).forEach(el => {\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, el);\n    }));\n  }\n};\n\nexport default Verb;","map":{"version":3,"sources":["/home/mustafaa/Desktop/for_trash/GermanAPI/german_conjugator/src/Verb.js"],"names":["React","useState","useEffect","Verb","passed_verb","hasError","setErrors","loading","setLoading","data","setData","common_data","setCommonData","verb","setVerb","something","tense","fetchData","res","fetch","method","body","JSON","stringify","json","then","catch","err","resVerbs","console","log","__html","html","parse","forEach","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAEhC,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,WAAD,EAAcC,aAAd,IAA+BX,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACG,WAAD,CAAhC;AAEA,MAAIW,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE,SADO;AAEdH,IAAAA;AAFc,GAAhB;;AAKA,iBAAeI,SAAf,GAA0B;AACxB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AACzDC,MAAAA,MAAM,EAAE,MADiD;AAEzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,SAAf;AAFmD,KAApC,CAAvB;AAIAG,IAAAA,GAAG,CACFM,IADD,GAECC,IAFD,CAEMP,GAAG,IAAI;AACTR,MAAAA,OAAO,CAACQ,GAAD,CAAP;AACH,KAJD,EAKCQ,KALD,CAKOC,GAAG,IAAIrB,SAAS,CAACqB,GAAD,CALvB;AAOA,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAC,oCAAD,EAAuC;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,SAAf;AAF2D,KAAvC,CAA5B;AAIAa,IAAAA,QAAQ,CACPJ,IADD,GAECC,IAFD,CAEMP,GAAG,IAAI;AACTW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAlB,MAAAA,aAAa,CAACM,GAAD,CAAb;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAND,EAOCkB,KAPD,CAOOC,GAAG,IAAIrB,SAAS,CAACqB,GAAD,CAPvB;AAQD;;AAEDzB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA;AAACY,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACC,SAAL,CAAed,IAAf,CAAZ;AAAkC;;AACnC,MAAGF,OAAO,KAAK,IAAf,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,uBAAuB,EAAE;AAAEwB,QAAAA,MAAM,EAAEtB,IAAI,CAACuB;AAAf,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGIV,IAAI,CAACW,KAAL,CAAWtB,WAAW,CAACqB,IAAvB,EAA6BE,OAA7B,CAAqCC,EAAE,IAAI;AACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,EAAP;AACD,KAFD,CAHJ,CADF;AAWD;AACF,CA3DD;;AA6DA,eAAehC,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Verb = ({ passed_verb }) => {\n\n  const [hasError, setErrors] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({});\n  const [common_data, setCommonData] = useState({});\n  const [verb, setVerb] = useState(passed_verb);\n\n  let something = {\n    tense: \"Präsens\",\n    verb\n  }\n\n  async function fetchData(){\n    const res = await fetch('http://localhost:5555/conjugate', {\n      method: \"POST\",\n      body: JSON.stringify(something)\n    });\n    res\n    .json()\n    .then(res => {\n        setData(res);\n    })\n    .catch(err => setErrors(err));\n\n    const resVerbs = await fetch('http://localhost:5555/common-verbs', {\n      method: \"POST\",\n      body: JSON.stringify(something)\n    });\n    resVerbs\n    .json()\n    .then(res => {\n        console.log('res')\n        setCommonData(res)\n        setLoading(false)\n    })\n    .catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, []);\n\n  {console.log(JSON.stringify(data))}\n  if(loading === true){\n    return <h1>Loading ...</h1>        \n  } else {\n    return (\n      <div>\n        <div dangerouslySetInnerHTML={{ __html: data.html }} />\n        { \n          JSON.parse(common_data.html).forEach(el => {\n            <span>{el}</span>\n          })\n        }\n        {/* <div dangerouslySetInnerHTML={{ __html: common_data.html }} /> */}\n      </div>\n      );\n  }\n}\n\nexport default Verb;\n"]},"metadata":{},"sourceType":"module"}