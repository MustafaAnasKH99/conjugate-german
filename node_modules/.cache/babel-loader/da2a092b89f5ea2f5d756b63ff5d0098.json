{"ast":null,"code":"var _jsxFileName = \"/home/mustafaa/Desktop/for_trash/GermanAPI/german_conjugator/src/Verb.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Verb = ({\n  passed_verb,\n  passed_tense\n}) => {\n  const [hasError, setErrors] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({});\n  let something = {\n    tense: passed_tense,\n    verb: passed_verb\n  };\n\n  async function fetchData() {\n    const res = await fetch('http://localhost:5555/conjugate', {\n      method: \"POST\",\n      body: JSON.stringify(something)\n    });\n    res.json().then(res => {\n      console.log(res.html.includes('Pr&#xE4;sens'));\n\n      if (res.html.includes('Pr&#xE4;sens')) {\n        res.html.replace('Pr&#xE4;sens', ' ');\n      } else if (res.html.includes('Pr&#xE4;teritum')) {\n        res.html.replace('Pr&#xE4;teritum', '');\n      } else if (res.html.includes('Futur I')) {\n        res.html.replace('Futur I', '');\n      }\n\n      setLoading(false);\n    }).then(res => {\n      setData(res);\n    }).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    console.log('component updated');\n    fetchData();\n  }, [passed_verb, passed_tense]);\n  {\n    console.log(JSON.stringify(data));\n  }\n\n  if (loading === true) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }, \"Loading ...\");\n  } else {\n    let tenses = {\n      text1: 'Pr채sens',\n      text2: 'Pr채teritum',\n      text3: 'Futur I'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"verbs-conjugated\",\n      dangerouslySetInnerHTML: {\n        __html: data.html\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default Verb;","map":{"version":3,"sources":["/home/mustafaa/Desktop/for_trash/GermanAPI/german_conjugator/src/Verb.js"],"names":["React","useState","useEffect","Verb","passed_verb","passed_tense","hasError","setErrors","loading","setLoading","data","setData","something","tense","verb","fetchData","res","fetch","method","body","JSON","stringify","json","then","console","log","html","includes","replace","catch","err","tenses","text1","text2","text3","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAmC;AAC9C,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEA,MAAIW,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAER,YADO;AAEdS,IAAAA,IAAI,EAAEV;AAFQ,GAAhB;;AAIA,iBAAeW,SAAf,GAA0B;AACxB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AACzDC,MAAAA,MAAM,EAAE,MADiD;AAEzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,SAAf;AAFmD,KAApC,CAAvB;AAIAI,IAAAA,GAAG,CACFM,IADD,GAECC,IAFD,CAEMP,GAAG,IAAI;AACTQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACU,IAAJ,CAASC,QAAT,CAAkB,cAAlB,CAAZ;;AACA,UAAGX,GAAG,CAACU,IAAJ,CAASC,QAAT,CAAkB,cAAlB,CAAH,EAAqC;AACnCX,QAAAA,GAAG,CAACU,IAAJ,CAASE,OAAT,CAAiB,cAAjB,EAAiC,GAAjC;AACD,OAFD,MAEO,IAAGZ,GAAG,CAACU,IAAJ,CAASC,QAAT,CAAkB,iBAAlB,CAAH,EAAwC;AAC7CX,QAAAA,GAAG,CAACU,IAAJ,CAASE,OAAT,CAAiB,iBAAjB,EAAoC,EAApC;AACD,OAFM,MAEA,IAAGZ,GAAG,CAACU,IAAJ,CAASC,QAAT,CAAkB,SAAlB,CAAH,EAAgC;AACrCX,QAAAA,GAAG,CAACU,IAAJ,CAASE,OAAT,CAAiB,SAAjB,EAA4B,EAA5B;AACD;;AAEDnB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAbD,EAaGc,IAbH,CAaQP,GAAG,IAAI;AACbL,MAAAA,OAAO,CAACK,GAAD,CAAP;AACD,KAfD,EAgBCa,KAhBD,CAgBOC,GAAG,IAAIvB,SAAS,CAACuB,GAAD,CAhBvB;AAiBD;;AAED5B,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAV,IAAAA,SAAS;AACV,GAHQ,EAGN,CAACX,WAAD,EAAcC,YAAd,CAHM,CAAT;AAKA;AAACmB,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAZ;AAAkC;;AACnC,MAAGF,OAAO,KAAK,IAAf,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD,GAFD,MAEO;AACL,QAAIuB,MAAM,GAAG;AACXC,MAAAA,KAAK,EAAE,SADI;AAEXC,MAAAA,KAAK,EAAE,YAFI;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEzB,IAAI,CAACgB;AAAf,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;AACF,CArDD;;AAuDA,eAAevB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Verb = ({ passed_verb, passed_tense }) => {\n  const [hasError, setErrors] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({});\n\n  let something = {\n    tense: passed_tense,\n    verb: passed_verb\n  }\n  async function fetchData(){\n    const res = await fetch('http://localhost:5555/conjugate', {\n      method: \"POST\",\n      body: JSON.stringify(something)\n    });\n    res\n    .json()\n    .then(res => {\n        console.log(res.html.includes('Pr&#xE4;sens'))\n        if(res.html.includes('Pr&#xE4;sens')){\n          res.html.replace('Pr&#xE4;sens', ' ')\n        } else if(res.html.includes('Pr&#xE4;teritum')){\n          res.html.replace('Pr&#xE4;teritum', '')\n        } else if(res.html.includes('Futur I')){\n          res.html.replace('Futur I', '')\n        }\n        \n        setLoading(false)\n    }).then(res => {\n      setData(res);\n    })\n    .catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    console.log('component updated')\n    fetchData()\n  }, [passed_verb, passed_tense]);\n\n  {console.log(JSON.stringify(data))}\n  if(loading === true){\n    return <h1>Loading ...</h1>        \n  } else {\n    let tenses = {\n      text1: 'Pr채sens',\n      text2: 'Pr채teritum',\n      text3: 'Futur I',\n    }\n    return (\n      <div>\n        <div className=\"verbs-conjugated\" dangerouslySetInnerHTML={{ __html: data.html }} />\n      </div>\n      );\n  }\n}\n\nexport default Verb;\n"]},"metadata":{},"sourceType":"module"}