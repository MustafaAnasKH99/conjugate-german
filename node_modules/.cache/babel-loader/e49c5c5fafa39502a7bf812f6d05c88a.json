{"ast":null,"code":"var _jsxFileName = \"/home/mustafaa/Desktop/for_trash/GermanAPI/german_conjugator/src/Examples.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Examples = async ({\n  passed_verb\n}) => {\n  const [examples, setExamples] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [hasError, setErrors] = useState(false);\n  useEffect(() => {// console.log('sentences')\n    // console.log(sentences.sentences_arr.splice(0, 2))\n  }, [sentences]);\n  let something = {\n    verb: passed_verb\n  };\n  const res = await fetch('http://localhost:5555/get-example', {\n    method: \"POST\",\n    body: JSON.stringify(something)\n  });\n  res.json().then(res => {\n    // console.log('examples')\n    // console.log(res.sentences_arr)\n    setLoading(false);\n    setExamples(res);\n  }).catch(err => setErrors(err));\n\n  if (sentences.length > 1) {\n    alert('yes it is');\n    let chunk = sentences.sentences_arr.splice(0, 2);\n    console.log('chunk');\n    console.log(chunk);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      marginTop: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, sentences.toString()), examples.sentences_arr.forEach(sentence => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 24\n      }\n    }, sentence);\n  }));\n};\n\nexport default Examples;","map":{"version":3,"sources":["/home/mustafaa/Desktop/for_trash/GermanAPI/german_conjugator/src/Examples.js"],"names":["React","useState","useEffect","Examples","passed_verb","examples","setExamples","loading","setLoading","hasError","setErrors","sentences","something","verb","res","fetch","method","body","JSON","stringify","json","then","catch","err","length","alert","chunk","sentences_arr","splice","console","log","width","marginTop","toString","forEach","sentence"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,QAAQ,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAA2B;AAExC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,SAAX,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACH,GAHQ,EAGN,CAACS,SAAD,CAHM,CAAT;AAKA,MAAIC,SAAS,GAAG;AACZC,IAAAA,IAAI,EAAET;AADM,GAAhB;AAIA,QAAMU,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AACzDC,IAAAA,MAAM,EAAE,MADiD;AAEzDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,SAAf;AAFmD,GAAtC,CAAvB;AAIEE,EAAAA,GAAG,CACFM,IADD,GAECC,IAFD,CAEMP,GAAG,IAAI;AACT;AACA;AACAN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,WAAW,CAACQ,GAAD,CAAX;AACH,GAPD,EAQCQ,KARD,CAQOC,GAAG,IAAIb,SAAS,CAACa,GAAD,CARvB;;AAUF,MAAIZ,SAAS,CAACa,MAAV,GAAmB,CAAvB,EAAyB;AACrBC,IAAAA,KAAK,CAAC,WAAD,CAAL;AACA,QAAIC,KAAK,GAAGf,SAAS,CAACgB,aAAV,CAAwBC,MAAxB,CAA+B,CAA/B,EAAkC,CAAlC,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMrB,SAAS,CAACsB,QAAV,EAAN,CADJ,EAGQ5B,QAAQ,CAACsB,aAAT,CAAuBO,OAAvB,CAAgCC,QAAD,IAAc;AAC7C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,QAAJ,CAAP;AACH,GAFG,CAHR,CADJ;AAUH,CA/CD;;AAkDA,eAAehC,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst Examples = async ({ passed_verb }) => {\n    \n    const [examples, setExamples] = useState({});\n    const [loading, setLoading] = useState(true); \n    const [hasError, setErrors] = useState(false);\n\n    \n    useEffect(() => {\n        // console.log('sentences')\n        // console.log(sentences.sentences_arr.splice(0, 2))\n    }, [sentences]);\n\n    let something = {\n        verb: passed_verb\n    }\n\n    const res = await fetch('http://localhost:5555/get-example', {\n        method: \"POST\",\n        body: JSON.stringify(something)\n      });\n      res\n      .json()\n      .then(res => {\n          // console.log('examples')\n          // console.log(res.sentences_arr)\n          setLoading(false)\n          setExamples(res);\n      })\n      .catch(err => setErrors(err));\n\n    if (sentences.length > 1){\n        alert('yes it is')\n        let chunk = sentences.sentences_arr.splice(0, 2)\n        console.log('chunk')\n        console.log(chunk)\n    }\n    \n    return(\n        <div style={{width: '100%', marginTop: '15px'}}>\n            <div>{sentences.toString()}</div>\n            {\n                examples.sentences_arr.forEach((sentence) => {\n                return <p>{sentence}</p>\n            })\n            }\n        </div>\n    )\n}\n  \n\nexport default Examples\n"]},"metadata":{},"sourceType":"module"}